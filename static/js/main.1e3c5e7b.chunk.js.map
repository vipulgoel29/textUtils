{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","buttonStyle","color","width","height","backgroundColor","marginRight","borderRadius","border","outline","outlineOffset","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","style","onClick","toggleModeLight","toggleModeBlue","toggleModeGreen","toggleModeRed","TextForm","findWord","text","word","prompt","includes","showalert","_useState","useState","_useState2","Object","slicedToArray","setText","Fragment","heading","value","onChange","event","target","rows","toUpperCase","toLowerCase","split","length","Alert","alert","role","substring","msg","App","setMode","_useState3","_useState4","setAlert","showAlert","message","console","log","setTimeout","document","querySelector","about","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.1e3c5e7b.chunk.js","sourcesContent":["import React from \"react\";\r\n// import styled from \"styled-components\";\r\n// import PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// #region constants\r\n\r\n// #endregion\r\n\r\n// #region styled-components\r\n\r\n// #endregion\r\n\r\n// #region functions\r\n\r\n// #endregion\r\n\r\n// #region component\r\n\r\n/**\r\n *\r\n */\r\nexport default function Navbar(props) {\r\n  const buttonStyle = (color) => {\r\n    return {\r\n      width: \"30px\",\r\n      height: \"30px\",\r\n      backgroundColor: color,\r\n      marginRight: \"15px\",\r\n      borderRadius: \"50%\",\r\n      border: \"none\",\r\n      outline: \"2px solid black\",\r\n      outlineOffset: \"3px\",\r\n    };\r\n  };\r\n\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${\r\n        props.mode === \"white\" ? \"light\" : \"dark\"\r\n      } bg-${props.mode === \"white\" ? \"light\" : \"dark\"}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/about\">\r\n                {props.about}\r\n              </a>\r\n            </li> */}\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          <div>\r\n            <button\r\n              className=\"\"\r\n              style={buttonStyle(\"white\")}\r\n              onClick={props.toggleModeLight}\r\n            ></button>\r\n            <button\r\n              className=\"\"\r\n              style={buttonStyle(\"blue\")}\r\n              onClick={props.toggleModeBlue}\r\n            ></button>\r\n            <button\r\n              className=\"\"\r\n              style={buttonStyle(\"green\")}\r\n              onClick={props.toggleModeGreen}\r\n            ></button>\r\n            <button\r\n              className=\"\"\r\n              style={buttonStyle(\"red\")}\r\n              onClick={props.toggleModeRed}\r\n            ></button>\r\n          </div>\r\n          {/* <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode}\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable Dark Mode\r\n            </label>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\n// Navbar.propTypes = {\r\n//   title: PropTypes.string.isRequired,\r\n//   about: PropTypes.string.isRequired,\r\n// };\r\n\r\n// Navbar.defaultProps = {\r\n//   title: \"Set title here\",\r\n//   about: \"About\",\r\n// };\r\n","import React, { useState } from \"react\";\r\n// import styled from 'styled-components';\r\n// import PropTypes from \"prop-types\";\r\n\r\n// #region constants\r\n\r\n// #endregion\r\n\r\n// #region styled-components\r\n\r\n// #endregion\r\n\r\n// #region functions\r\n\r\n// #endregion\r\n\r\n// #region component\r\n\r\n/**\r\n *\r\n */\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    // console.log(\"Uppercase was clicked\" + text);\r\n    setText(text.toUpperCase());\r\n    props.showalert(\"Converted to uppercase\", \"success\");\r\n  };\r\n  const handleLowClick = () => {\r\n    // console.log(\"Uppercase was clicked\" + text);\r\n    setText(text.toLowerCase());\r\n    props.showalert(\"Converted to lowercsae\", \"success\");\r\n  };\r\n  const findWord = () => {\r\n    if (text) {\r\n      const word = prompt(\"Enter the word do you want to search\");\r\n\r\n      text.includes(word)\r\n        ? props.showalert(\"Word was found\", \"success\")\r\n        : props.showalert(\"Word was not found\", \"warning\");\r\n    } else {\r\n      props.showalert(\"There was no text\", \"warning\");\r\n    }\r\n  };\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"On change\");\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n  //   setText(\"Neew text\");\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          color: props.mode === \"white\" ? \"black\" : \"white\",\r\n        }}\r\n      >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n            style={{\r\n              backgroundColor: props.mode === \"white\" ? \"white\" : \"black\",\r\n              color: props.mode === \"white\" ? \"black\" : \"white\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <button\r\n          className={`btn btn-${\r\n            props.mode === \"white\" ? \"dark\" : \"light\"\r\n          } mx-2`}\r\n          onClick={handleUpClick}\r\n        >\r\n          Convert to uppercase\r\n        </button>\r\n        <button\r\n          className={`btn btn-${\r\n            props.mode === \"white\" ? \"dark\" : \"light\"\r\n          } mx-2`}\r\n          onClick={handleLowClick}\r\n        >\r\n          Convert to lowercsae\r\n        </button>\r\n        <button\r\n          className={`btn btn-${\r\n            props.mode === \"white\" ? \"dark\" : \"light\"\r\n          } mx-2`}\r\n          onClick={findWord}\r\n        >\r\n          Find word\r\n        </button>\r\n        <button\r\n          className={`btn btn-${\r\n            props.mode === \"white\" ? \"dark\" : \"light\"\r\n          } mx-2`}\r\n          onClick={findWord}\r\n        >\r\n          Find word\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-3 \"\r\n        style={{\r\n          color: props.mode === \"white\" ? \"#042743\" : \"white\",\r\n        }}\r\n      >\r\n        <h2>Your text summary</h2>\r\n        <p>\r\n          {text.split(\" \").length} words,{text.length} characters\r\n        </p>\r\n        <p>{text.split(\" \").length * 0.008} min will be taken</p>\r\n        <h2>Preview</h2>\r\n        <p>{text ? text : \"Enter something to preview it\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n// #endregion\r\n","import React from \"react\";\r\n// import styled from 'styled-components';\r\n// import PropTypes from 'prop-types';\r\n\r\n// #region constants\r\n\r\n// #endregion\r\n\r\n// #region styled-components\r\n\r\n// #endregion\r\n\r\n// #region functions\r\n\r\n// #endregion\r\n\r\n// #region component\r\n\r\n/**\r\n *\r\n */\r\nexport default function Alert(props) {\r\n  const capitalize = (word) => {\r\n    return word[0].toUpperCase() + word.substring(1);\r\n  };\r\n\r\n  return (\r\n    props.alert && (\r\n      <div>\r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n          role=\"alert\"\r\n        >\r\n          <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\n// #endregion\r\n","// import logo from \"./logo.svg\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import About from \"./components/About\";\nimport Alert from \"./components/Alert\";\n// import { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"white\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    console.log(alert.msg);\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleModeLight = () => {\n    setMode(\"white\");\n    console.log(mode);\n    showAlert(\n      `${mode[0].toUpperCase()}${mode.substring(1)} ${\n        mode === \"white\" ? \"\" : \"dark\"\n      } mode has been enabled`,\n      \"success\"\n    );\n    document.title = \"TextUtils-LightMode\";\n  };\n\n  const toggleModeRed = () => {\n    setMode(\"red\");\n    console.log(mode);\n    showAlert(\n      `${mode[0].toUpperCase()}${mode.substring(1)} ${\n        mode === \"white\" ? \"\" : \"dark\"\n      } mode has been enabled`,\n      \"success\"\n    );\n  };\n\n  const toggleModeBlue = () => {\n    setMode(\"blue\");\n    console.log(mode);\n    showAlert(\n      `${mode[0].toUpperCase()}${mode.substring(1)} ${\n        mode === \"white\" ? \"\" : \"dark\"\n      } mode has been enabled`,\n      \"success\"\n    );\n  };\n\n  const toggleModeGreen = () => {\n    setMode(\"green\");\n    console.log(mode);\n    showAlert(\n      `${mode[0].toUpperCase()}${mode.substring(1)} ${\n        mode === \"white\" ? \"\" : \"dark\"\n      } mode has been enabled`,\n      \"success\"\n    );\n  };\n  document.querySelector(\"body\").style.backgroundColor = mode;\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar\n        title=\"TextUtils\"\n        about=\"About TextUtils\"\n        mode={mode}\n        toggleModeLight={toggleModeLight}\n        toggleModeBlue={toggleModeBlue}\n        toggleModeGreen={toggleModeGreen}\n        toggleModeRed={toggleModeRed}\n      />\n      <Alert alert={alert} />\n      {/* <Navbar /> */}\n      <div className=\"container my-3\">\n        {/* <Routes> */}\n        {/* <Route exact path=\"/about\" element={<About />} /> */}\n\n        {/* <Route\n              exact\n              path=\"/\"\n              element={\n                <TextForm\n                  heading=\"Enter the text to analyze below\"\n                  mode={mode}\n                  showalert={showAlert}\n                />\n              } */}\n        <TextForm\n          heading=\"Enter the text to analyze below\"\n          mode={mode}\n          showalert={showAlert}\n        />\n\n        {/* </Routes> */}\n        {/* <TextForm\n          heading=\"Enter the text to analyze below\"\n          mode={mode}\n          showalert={showAlert}\n        /> */}\n        {/* <About /> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}